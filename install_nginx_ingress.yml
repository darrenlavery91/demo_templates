---
- name: Install Nginx Ingress Controller and configure /etc/hosts
  hosts: localhost
  connection: local
  tasks:

    - name: Check if Kind is installed
      command: kind version
      register: kind_version
      ignore_errors: true

    - name: Fail if Kind is not installed
      fail:
        msg: "Kind is not installed! Please install it first."
      when: kind_version.rc != 0

    - name: Get running Kind clusters
      command: kind get clusters
      register: kind_clusters
      changed_when: false

    - name: Fail if no Kind cluster is running
      fail:
        msg: "No Kind clusters are running. Start a Kind cluster before running this playbook."
      when: kind_clusters.stdout | length == 0

    - name: Create ingress-nginx namespace
      command: kubectl create namespace ingress-nginx
      register: namespace_result
      changed_when: "'created' in namespace_result.stdout"
      ignore_errors: true  # Ignore if namespace already exists

    - name: Apply Nginx Ingress Controller manifest
      command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
      register: ingress_result
      changed_when: "'created' in ingress_result.stdout or 'configured' in ingress_result.stdout"

    - name: Wait for Nginx Ingress Controller to be ready
      command: kubectl wait --namespace ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=120s
      changed_when: false

    - name: Get Kind cluster IP
      command: podman inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' kind-control-plane
      register: kind_ip
      changed_when: false

    - name: Update /etc/hosts with Kind cluster IP
      lineinfile:
        path: /etc/hosts
        line: "{{ kind_ip.stdout }} public_darren"
        state: present
      when: kind_ip.stdout | length > 0
      become: true
